{"version":3,"sources":["components/Numbers.js","components/Filter.js","components/PersonForm.js","services/persons.js","App.js","index.js"],"names":["Number","person","onDelete","name","number","onClick","Numbers","persons","console","log","map","id","Filter","value","onChange","PersonForm","props","nameValue","nameOnChange","numberValue","numberOnChange","type","axios","get","then","response","data","post","delete","put","Alert","alertMessage","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setAlertMessage","useEffect","services","allPersons","event","target","preventDefault","existingPerson","find","window","confirm","updatedPerson","catch","error","setTimeout","newPerson","concat","filter","toLowerCase","startsWith","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d6ec2f3.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Number = ( { person, onDelete }) => <li>{person.name} @ {person.number} <button onClick={onDelete(person)}>delete</button></li>\n\nconst Numbers = ( { persons, onDelete }) => {\n  console.log(onDelete)\n  return persons.map(person => <Number key={person.id} person={person} onDelete={onDelete}/>)\n}\n\nexport default Numbers","import React from 'react'\n\n\nconst Filter = ({value, onChange}) => {\n  return (\n  <div>\n    filter shown with <input value={value} onChange={onChange}/>\n  </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n\n  return (\n  <form>\n    <div>\n      name: <input value={props.nameValue} onChange={props.nameOnChange}/>\n    </div>\n    <div>\n      number: <input value={props.numberValue} onChange={props.numberOnChange} />\n    </div>\n    <div>\n      <button type=\"submit\" onClick={props.onClick}>add</button>\n    </div>\n  </form>\n  )\n}\n\nexport default PersonForm","import axios from 'axios'\n\nconst getAll = () => {\n  const request = axios.get('/api/persons')\n  return request.then(response => response.data)\n}\n\nconst addPerson = (person) => {\n  const request = axios.post('/api/persons', person)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = (person) => {\n  const request = axios.delete(`/api/persons/${person.id}`)\n  return request.then(response => response.data)\n}\n\nconst updateNumber = (person) => {\n  const request = axios.put(`/api/persons/${person.id}`, person)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, addPerson, deletePerson, updateNumber}\n","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Numbers'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport services from './services/persons'\n\nconst Alert = ({ alertMessage }) => {\n  const alertStyle = {\n    color: 'green',\n    background: 'lightgrey',\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n\n  }\n\n\n  if (alertMessage) {\n    return (\n      <div style={alertStyle}>\n        {alertMessage}\n      </div>\n    )\n  } else {\n    return (\n      <div></div>\n    )\n  }\n\n}\n\nfunction App() {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [alertMessage, setAlertMessage] = useState(null)\n\n  const hook = () => {\n    console.log('effect')\n    services.getAll()\n      .then(allPersons => {\n        console.log('promise fulfilled')\n        setPersons(allPersons)\n        console.log(allPersons)\n      })\n  }\n\n  useEffect(hook, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const handleAddClick = (event) => {\n    event.preventDefault()\n    let existingPerson = persons.find(person => person.name === newName)\n    if (persons.find(person => person.name === newName)) {\n      if (window.confirm(`${newName} already exists. Do you want to update their number?`)) {\n        services.updateNumber({...existingPerson, number: newNumber})\n                .then(updatedPerson => {\n                  console.log('update fulfilled')\n                  console.log(updatedPerson)\n                  setPersons(persons.map(person => person.id !== updatedPerson.id ? person : updatedPerson))\n                })\n                .catch(error => {\n                  setAlertMessage(`${newName} was already deleted`)\n                  setTimeout(() => {\n                    setAlertMessage(null)\n                  }, 3000)\n                })\n      }\n\n    } else {\n      services.addPerson({name: newName, number: newNumber})\n              .then(newPerson => {\n                console.log(newPerson)\n                setPersons(persons.concat(newPerson))\n                setNewNumber('')\n                setNewName('')\n                setAlertMessage(`Added ${newPerson.name}`)\n                setTimeout(() => {\n                  setAlertMessage(null)\n                }, 3000)\n              }) \n    }\n  }\n\n  const handleDelete = (personToDelete) => {\n    return () => {\n      services.deletePerson(personToDelete)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== personToDelete.id))\n        })\n        .catch(error => {\n          setAlertMessage(`${personToDelete.name} was already deleted`)\n          setTimeout(() => {\n            setAlertMessage(null)\n          }, 3000)\n        })\n    }\n  }\n\n  const filterNames = () => {\n    return persons.filter(person => person.name.toLowerCase().startsWith(newFilter.toLowerCase()))\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Alert alertMessage={alertMessage} />\n      <Filter value={newFilter} onChange={handleFilterChange}/>\n      <h2>add a new</h2>\n      <PersonForm \n        nameValue={newName} \n        nameOnChange={handleNameChange} \n        numberValue={newNumber} \n        numberOnChange={handleNumberChange} \n        onClick={handleAddClick}/>\n      <h2>Numbers</h2>\n      <ul>\n        <Persons persons={filterNames()} onDelete={handleDelete}/>\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}